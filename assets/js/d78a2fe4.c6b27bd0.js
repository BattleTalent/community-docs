"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5326],{8453:(e,t,r)=>{r.d(t,{RP:()=>a,xA:()=>c});var s=r(6540);const n=s.createContext({});function a(e){const t=s.useContext(n);return s.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const i={};function c({components:e,children:t,disableParentContext:r}){let c;return c=r?"function"==typeof e?e({}):e||i:a(e),s.createElement(n.Provider,{value:c},t)}},9947:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"LuaScript/Reference by category/Physic/snippet-sphere-casting","title":"SphereCast","description":"Casts a sphere along a ray and returns detailed information on what was hit.","source":"@site/docs/LuaScript/4.Reference by category/4.Physic/snippet-sphere-casting.md","sourceDirName":"LuaScript/4.Reference by category/4.Physic","slug":"/LuaScript/Reference by category/Physic/snippet-sphere-casting","permalink":"/community-docs/docs/LuaScript/Reference by category/Physic/snippet-sphere-casting","draft":false,"unlisted":false,"editUrl":"https://github.com/BattleTalent/community-docs/docs/LuaScript/4.Reference by category/4.Physic/snippet-sphere-casting.md","tags":[],"version":"current","frontMatter":{"title":"SphereCast"},"sidebar":"docs","previous":{"title":"RayCast","permalink":"/community-docs/docs/LuaScript/Reference by category/Physic/snippet-ray-casting"},"next":{"title":"Event - OnModToggle","permalink":"/community-docs/docs/LuaScript/Reference by category/Mod/snippet-event-on-mod-toggle"}}');var n=r(4848),a=r(8453);const i={title:"SphereCast"},c=void 0,o={},l=[{value:"Example",id:"example",level:2},{value:"User Variables",id:"user-variables",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.RP)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:"Casts a sphere along a ray and returns detailed information on what was hit."}),"\n",(0,n.jsx)(t.p,{children:"This is useful when a Raycast does not give enough precision, because you want to find out if an object of a specific size, such as a character, will be able to move somewhere without colliding with anything on the way. Think of the sphere cast like a thick raycast. In this case the ray is specified by a start vector and a direction."}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Notes"}),": SphereCast will not detect colliders for which the sphere overlaps the collider. Passing a zero radius results in undefined output and doesn't always behave the same as ",(0,n.jsx)(t.a,{href:"snippet-ray-casting",children:"Raycast"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-lua",children:"local forward = self.transformThatYouAreRaycastingFrom:TransformDirection(UE.Vector3.forward);\r\nlocal ret, hitInfo = UE.Physics.SphereCast(self.transformThatYouAreRaycastingFrom.position, 0.02, forward, 50, CL.LayerDefine.EnvLayerMask.value)\r\n\r\nif ret then\r\n    print(hitInfo.collider.name)\r\nend\n"})}),"\n",(0,n.jsx)(t.h2,{id:"user-variables",children:"User Variables"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Component"}),(0,n.jsx)(t.th,{children:"variable"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Transform"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"self.transformThatYouAreRaycastingFrom"})})]})})]})]})}function h(e={}){const{wrapper:t}={...(0,a.RP)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);