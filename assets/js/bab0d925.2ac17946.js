(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3767],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return y}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),f=l(n),y=o,d=f["".concat(u,".").concat(y)]||f[y]||p[y]||a;return n?r.createElement(d,c(c({ref:t},s),{},{components:n})):r.createElement(d,c({ref:t},s))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,c=new Array(a);c[0]=f;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var l=2;l<a;l++)c[l]=n[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3797:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return s},default:function(){return f}});var r=n(2122),o=n(9756),a=(n(7294),n(3905)),c=["components"],i={},u="NetworkState - state synchronization",l={unversionedId:"LuaScript/Reference by category/Network/NetworkState",id:"LuaScript/Reference by category/Network/NetworkState",isDocsHomePage:!1,title:"NetworkState - state synchronization",description:"We can use NetworkState for data synchronization, which currently only supports server synchronization of data to all clients.",source:"@site/docs/LuaScript/4.Reference by category/9.Network/3.NetworkState.md",sourceDirName:"LuaScript/4.Reference by category/9.Network",slug:"/LuaScript/Reference by category/Network/NetworkState",permalink:"/community-docs/docs/LuaScript/Reference by category/Network/NetworkState",editUrl:"https://github.com/BattleTalent/community-docs/docs/LuaScript/4.Reference by category/9.Network/3.NetworkState.md",version:"current",sidebarPosition:3,frontMatter:{},sidebar:"docs",previous:{title:"CMD - Client to Server",permalink:"/community-docs/docs/LuaScript/Reference by category/Network/CMD"},next:{title:"InputDetection",permalink:"/community-docs/docs/LuaScript/Reference by category/Input/snippet-input-detection"}},s=[],p={toc:s};function f(e){var t=e.components,n=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"networkstate---state-synchronization"},"NetworkState - state synchronization"),(0,a.kt)("p",null,"   We can use NetworkState for data synchronization, which currently only supports server synchronization of data to all clients."),(0,a.kt)("p",null,"   Similarly, complete the function and register"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'function Test:Awake()\n    \n    --The client updates the value upon receipt.\n    self.onValueChange = function(value)\n        self.value = value\n    end\nend\n\nfunction Test:NetworkInject()\n    self.host.interact.networkIB.networkIBState:InjectIntState("value", self.onValueChange)\n    --inject other function\nend\n')),(0,a.kt)("p",null,"   The server updates the value using ",(0,a.kt)("inlineCode",{parentName:"p"},"SetIntStateValue")," (Please read ",(0,a.kt)("inlineCode",{parentName:"p"},"NetworkIBStateX")," for more interfaces)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'function Test:ServerUpdateValue()\n    if CL.Network.VRNetworkManager.ServerOnline then\n        self.host.interact.networkIB.networkIBState:SetVec3StateValue("value", self.value)\n    end\nend\n')))}f.isMDXComponent=!0}}]);