"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[645],{593:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>d,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"details/handposes","title":"HandPoses","description":"You can hold objects in different ways by changing the \\"Hand Pose\\" parameter on the \\"AttachLine\\" prefab. Since the current documentation does not mention all different holdPoses, here is a list of all options.","source":"@site/docs/details/handposes.md","sourceDirName":"details","slug":"/details/handposes","permalink":"/community-docs/docs/details/handposes","draft":false,"unlisted":false,"editUrl":"https://github.com/BattleTalent/community-docs/docs/details/handposes.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"FlyObject","permalink":"/community-docs/docs/details/flyobject"},"next":{"title":"HitInfo and CollisionEffect","permalink":"/community-docs/docs/details/hitinfo-and-collisioneffect"}}');var i=t(4848),o=t(8453);const d={},r="HandPoses",c={},l=[];function a(e){const s={h1:"h1",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.RP)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"handposes",children:"HandPoses"})}),"\n",(0,i.jsx)(s.p,{children:'You can hold objects in different ways by changing the "Hand Pose" parameter on the "AttachLine" prefab. Since the current documentation does not mention all different holdPoses, here is a list of all options.'}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Pose"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"DefaultPose"}),(0,i.jsx)(s.td,{children:"This is the default pose. It is also used when NOT holding anything."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"HoldPose"}),(0,i.jsx)(s.td,{children:"This pose is for swords, axes, etc."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"GunPose"}),(0,i.jsx)(s.td,{children:"This pose is for holding guns."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"GunPose2"}),(0,i.jsx)(s.td,{children:"This pose is for holding guns."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"GlovePose"}),(0,i.jsx)(s.td,{children:"This pose is for spells."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"GuitarPose"}),(0,i.jsx)(s.td,{children:"This pose is for guitars."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"GrabPose"}),(0,i.jsx)(s.td,{children:"This pose is used when grabbing an enemy."})]})]})]})]})}function h(e={}){const{wrapper:s}={...(0,o.RP)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,s,t)=>{t.d(s,{RP:()=>o,xA:()=>r});var n=t(6540);const i=n.createContext({});function o(e){const s=n.useContext(i);return n.useMemo((()=>"function"==typeof e?e(s):{...s,...e}),[s,e])}const d={};function r({components:e,children:s,disableParentContext:t}){let r;return r=t?"function"==typeof e?e({}):e||d:o(e),n.createElement(i.Provider,{value:r},s)}}}]);