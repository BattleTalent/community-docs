(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8806],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return s},kt:function(){return d}});var r=n(7294);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,r,l=function(t,e){if(null==t)return{};var n,r,l={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var c=r.createContext({}),p=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},s=function(t){var e=p(t.components);return r.createElement(c.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var n=t.components,l=t.mdxType,a=t.originalType,c=t.parentName,s=o(t,["components","mdxType","originalType","parentName"]),m=p(n),d=l,y=m["".concat(c,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(y,i(i({ref:e},s),{},{components:n})):r.createElement(y,i({ref:e},s))}));function d(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var a=n.length,i=new Array(a);i[0]=m;var o={};for(var c in e)hasOwnProperty.call(e,c)&&(o[c]=e[c]);o.originalType=t,o.mdxType="string"==typeof t?t:l,i[1]=o;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4251:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return s},default:function(){return m}});var r=n(2122),l=n(9756),a=(n(7294),n(3905)),i=["components"],o={},c="FlyObject / FlyObjectX",p={unversionedId:"support-mod-types/Weapon/ImportantComponent/FlyObject",id:"support-mod-types/Weapon/ImportantComponent/FlyObject",isDocsHomePage:!1,title:"FlyObject / FlyObjectX",description:"Overview",source:"@site/docs/support-mod-types/1.Weapon/2.ImportantComponent/FlyObject.mdx",sourceDirName:"support-mod-types/1.Weapon/2.ImportantComponent",slug:"/support-mod-types/Weapon/ImportantComponent/FlyObject",permalink:"/community-docs/docs/support-mod-types/Weapon/ImportantComponent/FlyObject",editUrl:"https://github.com/BattleTalent/community-docs/docs/support-mod-types/1.Weapon/2.ImportantComponent/FlyObject.mdx",version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Enchantment Spell",permalink:"/community-docs/docs/support-mod-types/Weapon/Tutorials/enchantment-spell"},next:{title:"InteractTrigger / InteractTriggerX",permalink:"/community-docs/docs/support-mod-types/Weapon/ImportantComponent/InteractTrigger"}},s=[{value:"Overview",id:"overview",children:[]},{value:"Life Cycle",id:"life-cycle",children:[]},{value:"Flight Mechanics",id:"flight-mechanics",children:[]},{value:"Collision Configuration",id:"collision-configuration",children:[]},{value:"Collision Event Handlers",id:"collision-event-handlers",children:[]}],u={toc:s};function m(t){var e=t.components,o=(0,l.Z)(t,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,o,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"flyobject--flyobjectx"},"FlyObject / FlyObjectX"),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"FlyObject is a component designed to simulate objects with independent trajectories and short life cycles, such as fireballs and bullets. FlyObjectX extends the base FlyObject class by adding scripting capabilities through Lua."),(0,a.kt)("h2",{id:"life-cycle"},"Life Cycle"),(0,a.kt)("p",null,"The following diagram illustrates the complete life cycle of a ",(0,a.kt)("strong",{parentName:"p"},"FlyObject")," from spawn to termination:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"FlyObjLifeCycle",src:n(2201).Z})),(0,a.kt)("h2",{id:"flight-mechanics"},"Flight Mechanics"),(0,a.kt)("p",null,"During flight state, FlyObject can:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Generate and manage particle trails"),(0,a.kt)("li",{parentName:"ul"},"Track and update trajectory paths")),(0,a.kt)("p",null,"The object will transition from flight to stopped state once the collision count reaches the configured ",(0,a.kt)("inlineCode",{parentName:"p"},"collisionFlyCount")," value."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"FlyState",src:n(2602).Z})),(0,a.kt)("h2",{id:"collision-configuration"},"Collision Configuration"),(0,a.kt)("p",null,"FlyObject provides flexible collision filtering options:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ignoreDamageList"),": Specify object types to ignore during collision detection"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ignoreHolder"),": Option to ignore collisions with the entity that spawned this FlyObject")),(0,a.kt)("h2",{id:"collision-event-handlers"},"Collision Event Handlers"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Important"),": Collision events will override the default Lua functions. To maintain proper life cycle management, you must manually call ",(0,a.kt)("inlineCode",{parentName:"p"},"OnCollisionUpdate()")," in your handlers. See ",(0,a.kt)("inlineCode",{parentName:"p"},"FlySpellBaseScript.txt")," for implementation examples."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Target Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Collision Handler"),(0,a.kt)("th",{parentName:"tr",align:null},"Trigger Handler"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"PlayerHand"),(0,a.kt)("td",{parentName:"tr",align:null},"OnCollisionWithPlayerHand"),(0,a.kt)("td",{parentName:"tr",align:null},"OnTriggerWithPlayerHand")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Player"),(0,a.kt)("td",{parentName:"tr",align:null},"OnCollisionWithPlayer"),(0,a.kt)("td",{parentName:"tr",align:null},"OnTriggerWithPlayer")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"HitScan"),(0,a.kt)("td",{parentName:"tr",align:null},"OnCollisionWithHitScan"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Scene"),(0,a.kt)("td",{parentName:"tr",align:null},"OnCollisionWithScene"),(0,a.kt)("td",{parentName:"tr",align:null},"OnTriggerWithStaticScene")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Role"),(0,a.kt)("td",{parentName:"tr",align:null},"OnCollisionWithRole"),(0,a.kt)("td",{parentName:"tr",align:null},"OnTriggerWithRole")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Default"),(0,a.kt)("td",{parentName:"tr",align:null},"OnCollision"),(0,a.kt)("td",{parentName:"tr",align:null},"OnTrigger")))))}m.isMDXComponent=!0},2201:function(t,e,n){"use strict";e.Z=n.p+"assets/images/FlyObjLifeCycle-7d18c4fd90a73c3b2126ec7f798aec38.png"},2602:function(t,e,n){"use strict";e.Z=n.p+"assets/images/FlyState-82bccf4dc95abdcf96a5a8d26d0b3f58.png"}}]);