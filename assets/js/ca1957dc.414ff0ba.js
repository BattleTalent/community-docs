"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7986],{2634:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/script-custom-collision-effect-04bcb65bfa5bc91f2d02835bfe041c44.png"},6451:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"complete-scripts/script-custom-collision-effect-script","title":"CustomCollisionEffectScript","description":"CollisionEffect, but with custom sounds & effects!","source":"@site/docs/complete-scripts/script-custom-collision-effect-script.md","sourceDirName":"complete-scripts","slug":"/complete-scripts/script-custom-collision-effect-script","permalink":"/community-docs/docs/complete-scripts/script-custom-collision-effect-script","draft":false,"unlisted":false,"editUrl":"https://github.com/BattleTalent/community-docs/docs/complete-scripts/script-custom-collision-effect-script.md","tags":[],"version":"current","frontMatter":{"title":"CustomCollisionEffectScript"},"sidebar":"docs","previous":{"title":"BowScript","permalink":"/community-docs/docs/complete-scripts/script-bow-script"},"next":{"title":"DashOnTriggerScript","permalink":"/community-docs/docs/complete-scripts/script-dash-on-trigger"}}');var i=t(4848),s=t(8453);const c={title:"CustomCollisionEffectScript"},l=void 0,r={},d=[{value:"Code",id:"code",level:2},{value:"Component",id:"component",level:2},{value:"FAQ",id:"faq",level:2},{value:"What&#39;s the <code>col0</code> variable?",id:"whats-the-col0-variable",level:3}];function a(e){const n={code:"code",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,s.RP)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"CollisionEffect, but with custom sounds & effects!"}),"\n",(0,i.jsx)(n.h2,{id:"code",children:"Code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-lua",children:'local table = {\n    sqrSpeed = 2,\n}\n\nfunction table:OnColliderEnter(collision)\n    -- return when collision was with self\n\n    local hand = self.interactTrigger.interact:GetPrimaryHand()\n    if hand and collision.gameObject.transform.root == hand.character.trans.root then\n        return\n    end\n\n    local pu = CL.PhysicsUnit.GetPhysicsUnitTopDown(collision.collider)\n    if pu ~= nil and pu.unitType == CL.Tagger.Tag.PlayerRole then\n        return\n    end\n\n    -- return when collision was slow\n\n    if collision.relativeVelocity.sqrMagnitude < self.sqrSpeed then\n        return\n    end\n    \n    -- return when collider wasnt in list\n\n    local ct = collision:GetContact(0)\n    local colliderIsInList = false\n    local collider_index = 0\n    while self["col" .. collider_index] do\n        if self["col" .. collider_index] == ct.thisCollider then\n            colliderIsInList = true\n            break\n        end\n        collider_index = collider_index + 1\n    end\n    if not colliderIsInList then\n        return\n    end\n\n    -- collide!\n\n    local pos = collision.collider:ClosestPoint(ct.point)\n    pos.y = pos.y + 0.05\n\n    if self.effectName then\n        CL.EffectMgr.Instance:PlayEffect(self.effectName, pos, UE.Quaternion.identity)\n    end\n\n    local soundNames = {}   \n    local sound_index = 0\n    while self["soundName" .. sound_index] do\n        soundNames[sound_index] = self["soundName" .. sound_index]\n        sound_index = sound_index + 1\n    end\n\n    if soundNames[0] then\n        local volume = 0.5\n        local randomPitch = (math.random() + math.random(70, 130)) / 100\n        CL.AudioMgr.Instance:PlaySoundClip(soundNames, pos, false, volume, randomPitch)\n    end\nend\n\nreturn Class(nil,nil,table)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"component",children:"Component"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Component",src:t(2634).A+"",width:"732",height:"632"})}),"\n",(0,i.jsx)(n.h2,{id:"faq",children:"FAQ"}),"\n",(0,i.jsxs)(n.h3,{id:"whats-the-col0-variable",children:["What's the ",(0,i.jsx)(n.code,{children:"col0"})," variable?"]}),"\n",(0,i.jsxs)(n.p,{children:["You can add variables to this component to add the collision detection. For example; the above component will only be used on the ",(0,i.jsx)(n.code,{children:"col0"})," collider, but you could also add a ",(0,i.jsx)(n.code,{children:"col1"}),", ",(0,i.jsx)(n.code,{children:"col2"}),", and so on."]})]})}function u(e={}){const{wrapper:n}={...(0,s.RP)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{RP:()=>s,xA:()=>l});var o=t(6540);const i=o.createContext({});function s(e){const n=o.useContext(i);return o.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const c={};function l({components:e,children:n,disableParentContext:t}){let l;return l=t?"function"==typeof e?e({}):e||c:s(e),o.createElement(i.Provider,{value:l},n)}}}]);