(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7701],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),y=s(r),d=o,m=y["".concat(c,".").concat(d)]||y[d]||u[d]||i;return r?n.createElement(m,l(l({ref:t},p),{},{components:r})):n.createElement(m,l({ref:t},p))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,l=new Array(i);l[0]=y;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var s=2;s<i;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},969:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return p},default:function(){return y}});var n=r(2122),o=r(9756),i=(r(7294),r(3905)),l=["components"],a={title:"CL - PhysicsHelper - IgnoreCollisions"},c=void 0,s={unversionedId:"LuaScript/Reference by category/Physic/snippet-ignore-collisions",id:"LuaScript/Reference by category/Physic/snippet-ignore-collisions",isDocsHomePage:!1,title:"CL - PhysicsHelper - IgnoreCollisions",description:"Toggle collisions between 2 colliders so they can freely move past each other.",source:"@site/docs/LuaScript/4.Reference by category/4.Physic/snippet-ignore-collisions.md",sourceDirName:"LuaScript/4.Reference by category/4.Physic",slug:"/LuaScript/Reference by category/Physic/snippet-ignore-collisions",permalink:"/community-docs/docs/LuaScript/Reference by category/Physic/snippet-ignore-collisions",editUrl:"https://github.com/BattleTalent/community-docs/docs/LuaScript/4.Reference by category/4.Physic/snippet-ignore-collisions.md",version:"current",frontMatter:{title:"CL - PhysicsHelper - IgnoreCollisions"},sidebar:"docs",previous:{title:"Transform - Rotate",permalink:"/community-docs/docs/LuaScript/Reference by category/Transfrom/snippet-transform-rotate"},next:{title:"OnColliderEnter",permalink:"/community-docs/docs/LuaScript/Reference by category/Physic/snippet-on-collider-enter"}},p=[{value:"Example",id:"example",children:[]},{value:"User Variables",id:"user-variables",children:[]}],u={toc:p};function y(e){var t=e.components,r=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Toggle collisions between 2 colliders so they can freely move past each other."),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,"Ignore collisions"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"CL.PhysicsHelper.IgnoreCollisions(collider1, collider2, true)\n")),(0,i.kt)("p",null,"Reenable collisions"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"CL.PhysicsHelper.IgnoreCollisions(collider1, collider2, false)\n")),(0,i.kt)("h2",{id:"user-variables"},"User Variables"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Component"),(0,i.kt)("th",{parentName:"tr",align:null},"variable"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Collider (or list of colliders)"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"self.collider1"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Collider (or list of colliders)"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"self.collider2"))))))}y.isMDXComponent=!0}}]);