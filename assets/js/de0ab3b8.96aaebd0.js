(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4771],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),f=u(n),m=o,d=f["".concat(l,".").concat(m)]||f[m]||s[m]||c;return n?r.createElement(d,i(i({ref:t},p),{},{components:n})):r.createElement(d,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,i=new Array(c);i[0]=f;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var u=2;u<c;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7203:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return p},default:function(){return f}});var r=n(2122),o=n(9756),c=(n(7294),n(3905)),i=["components"],a={},l="RPC - Server to Client",u={unversionedId:"LuaScript/Reference by category/Network/RPC",id:"LuaScript/Reference by category/Network/RPC",isDocsHomePage:!1,title:"RPC - Server to Client",description:"The server calls the client function using Remote Procedure Call (RPC).",source:"@site/docs/LuaScript/4.Reference by category/9.Network/1.RPC.md",sourceDirName:"LuaScript/4.Reference by category/9.Network",slug:"/LuaScript/Reference by category/Network/RPC",permalink:"/community-docs/docs/LuaScript/Reference by category/Network/RPC",editUrl:"https://github.com/BattleTalent/community-docs/docs/LuaScript/4.Reference by category/9.Network/1.RPC.md",version:"current",sidebarPosition:1,frontMatter:{},sidebar:"docs",previous:{title:"Event - OnSceneEnter",permalink:"/community-docs/docs/LuaScript/Reference by category/Scene/snippet-event-on-scene-enter"},next:{title:"CMD - Client to Server",permalink:"/community-docs/docs/LuaScript/Reference by category/Network/CMD"}},p=[],s={toc:p};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,c.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"rpc---server-to-client"},"RPC - Server to Client"),(0,c.kt)("p",null,"   The server calls the client function using Remote Procedure Call (RPC)."),(0,c.kt)("p",null,"   A function that needs to be called on the client:"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},"function WeaponFlyObj:RpcOnShoot(bullet)\n    --client to do\nend\n")),(0,c.kt)("p",null,"   Registering Function in NetworkInject so that the client can find the same function and run it when the server calls it."),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},'function WeaponFlyObj:NetworkInject()\n    self.host.interact.networkIB.networkIBState:InjectFunc("RpcOnShoot", self.RpcOnShoot)\n    --inject other function\nend\n')),(0,c.kt)("p",null,"   The server uses the interface ",(0,c.kt)("inlineCode",{parentName:"p"},"ServerRpcIntFunc")," (Please read ",(0,c.kt)("inlineCode",{parentName:"p"},"NetworkIBStateX")," for more interfaces) in networkIBState to call functions in the client. (RpcOnShoot). "),(0,c.kt)("p",null,"   \u200b\tother interface refer to ",(0,c.kt)("inlineCode",{parentName:"p"},"NetworkIBStateX")),(0,c.kt)("p",null,"   ServerRpcIntFunc(funtionName, int, includeServer)"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"functionName: The name of the function to be called on the client")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"int:  int value")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"includeServer: run this function on the server as well\uff0cIn this case, includeServer is false, so it will only run RpcOnShoot on the client side."),(0,c.kt)("pre",{parentName:"li"},(0,c.kt)("code",{parentName:"pre"},'function WeaponFlyObj:ServerOnShoot(bullet)\n    self.host.interact.networkIB.networkIBState:ServerRpcIntFunc("RpcOnShoot", bullet.netId, false)\nend\n')))))}f.isMDXComponent=!0}}]);