"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7866],{1899:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"complete-scripts/script-teleport-on-trigger-release","title":"TeleportOnTriggerReleaseScript","description":"1. Hold down the trigger. Throw weapon.","source":"@site/docs/complete-scripts/script-teleport-on-trigger-release.md","sourceDirName":"complete-scripts","slug":"/complete-scripts/script-teleport-on-trigger-release","permalink":"/community-docs/docs/complete-scripts/script-teleport-on-trigger-release","draft":false,"unlisted":false,"editUrl":"https://github.com/BattleTalent/community-docs/docs/complete-scripts/script-teleport-on-trigger-release.md","tags":[],"version":"current","frontMatter":{"title":"TeleportOnTriggerReleaseScript"},"sidebar":"docs","previous":{"title":"TeleportOnExplodeScript","permalink":"/community-docs/docs/complete-scripts/script-teleport-on-collision"},"next":{"title":"Base Projects","permalink":"/community-docs/docs/projects/projects-base-projects"}}');var l=n(4848),s=n(8453);const o={title:"TeleportOnTriggerReleaseScript"},i=void 0,a={},c=[{value:"Code",id:"code",level:2},{value:"Component",id:"component",level:2}];function d(e){const t={code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.RP)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(t.ol,{children:["\n",(0,l.jsx)(t.li,{children:"Hold down the trigger. Throw weapon."}),"\n",(0,l.jsx)(t.li,{children:"Throw weapon."}),"\n",(0,l.jsx)(t.li,{children:"Teleports player to location of thrown blade when on releasing the trigger."}),"\n"]}),"\n",(0,l.jsx)(t.h2,{id:"code",children:"Code"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-lua",children:'local table = {}\n\nfunction table:Awake()\n    self.isCurrentlyHolding = false\n    self.scheId = null\n\tself.player = CL.InteractCharacter.PlayerInstance\n\tlocal leftHand = self.player.hands[1]\n\tlocal rightHand = self.player.hands[0]\n\tself.leftTrigger = leftHand.inputs[CL.VRTKInputButton.ButtonType.Trigger]\n\tself.rightTrigger = rightHand.inputs[CL.VRTKInputButton.ButtonType.Trigger]\nend\n\nfunction table:UpdateSkill()\n    local shootInterval = self.shootInterval or 0.1\n    local st = self.shootTime or 0\n    local ct = UE.Time.time\n    if ct - st < shootInterval then\n        return\n    end\n\n    self:PullTrigger()\nend\n\nfunction table:listenForButtonInput()\n\tif self.buttonHasBeenPressed then\n\t\tif self.hand == "left" and self.leftTrigger.IsPressed == false then\n\t\t\tself.buttonHasBeenPressed = false\n\t\t\tprint("stopped listening")\n\t\t\tself:Teleport()\n\t\t\tCL.Scheduler.RemoveSchedule(self.scheId)\n\t\t\treturn\n\t\tend\n\t\tif self.hand == "right" and self.rightTrigger.IsPressed == false then\t\t\n\t\t\tself.buttonHasBeenPressed = false\n\t\t\tprint("stopped listening")\n\t\t\tself:Teleport()\n\t\t\tCL.Scheduler.RemoveSchedule(self.scheId)\n\t\t\treturn\n\t\tend\n\tend\n\n\tif self.isCurrentlyHolding then\n\t\tif self.hand == "left" and self.leftTrigger.IsPressed then\n\t\t\tself.buttonHasBeenPressed = true\n\t\t\treturn\n\t\tend\n\t\tif self.hand == "right" and self.rightTrigger.IsPressed then\t\t\n\t\t\tself.buttonHasBeenPressed = true\n\t\t\treturn\n\t\tend\n\tend\nend\n\nfunction table:Teleport()\n\tif self.isCurrentlyHolding then\n\t\treturn\n\tend\n\n    if self.effectName then\n        CL.EffectMgr.Instance:PlayEffect(self.effectName, self.trans.position, UE.Quaternion.identity)\n    end\n\n\tif self.soundName then\n\t\tlocal volume = 0.5\n        local randomPitch = (math.random() + math.random(70, 130)) / 100\n\t\tCL.AudioMgr.Instance:PlaySoundClip(self.soundName, self.trans.position, false, volume, randomPitch)\n\tend\n\n    self.player:Transport(self.trans.position)\nend\n\nfunction table:OnGrab(a, g)\n    if (g) then\n\t\tself.isCurrentlyHolding = true\n\t\tif(a.attachedHand:GetHandIndex() == 0) then \n            self.hand = "right"\n        else\n            self.hand = "left"\n        end\n\telse\n\t\tself.isCurrentlyHolding = false\n\tend\nend\n\nfunction table:PullTrigger()\n    print("Instant skill triggered!")\n\n    local schedulerInterval = 0.02\n    local timeBeforeStopping = -1\n    local timeBeforeStarting = 0\n\n    self.scheId = CL.Scheduler.Create({},\n    function(sche, t, s)\n        self:listenForButtonInput()\n    end\n    , schedulerInterval, timeBeforeStopping, timeBeforeStarting)\n    :SetUpdateChannel(CL.Scheduler.UpdateChannel.FixedUpdate)\n    :IgnoreTimeScale(true)\n    :SetOnStop(function(sche)\n        print("Stopping input listener")\n    end).actionId\nend\n\nfunction table:OnDestroy()\n    CL.Scheduler.RemoveSchedule(self.scheId)\nend\n\nreturn Class(nil,nil,table)\n'})}),"\n",(0,l.jsx)(t.h2,{id:"component",children:"Component"}),"\n",(0,l.jsxs)(t.p,{children:["Use this script with ",(0,l.jsx)(t.code,{children:"InteractTriggerX"}),". No variables needed."]})]})}function p(e={}){const{wrapper:t}={...(0,s.RP)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{RP:()=>s,xA:()=>i});var r=n(6540);const l=r.createContext({});function s(e){const t=r.useContext(l);return r.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const o={};function i({components:e,children:t,disableParentContext:n}){let i;return i=n?"function"==typeof e?e({}):e||o:s(e),r.createElement(l.Provider,{value:i},t)}}}]);