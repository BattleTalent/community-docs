(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8976],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,f=d["".concat(p,".").concat(m)]||d[m]||c[m]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8624:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),i=["components"],l={title:"CL - AudioMgr - PlaySoundClip"},p=void 0,s={unversionedId:"snippets/snippet-play-sound-clip",id:"snippets/snippet-play-sound-clip",isDocsHomePage:!1,title:"CL - AudioMgr - PlaySoundClip",description:"Play a sound clip at a specific position.",source:"@site/docs/snippets/snippet-play-sound-clip.md",sourceDirName:"snippets",slug:"/snippets/snippet-play-sound-clip",permalink:"/community-docs/docs/snippets/snippet-play-sound-clip",editUrl:"https://github.com/BattleTalent/community-docs/docs/snippets/snippet-play-sound-clip.md",version:"current",frontMatter:{title:"CL - AudioMgr - PlaySoundClip"},sidebar:"docs",previous:{title:"OnTriggerEnter",permalink:"/community-docs/docs/snippets/snippet-on-trigger-enter"},next:{title:"Player - Bone Transforms",permalink:"/community-docs/docs/snippets/snippet-player-bone-transforms"}},u=[{value:"Example",id:"example",children:[]},{value:"User Variables",id:"user-variables",children:[]}],c={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Play a sound clip at a specific position."),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("p",null,"Play sound"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"local volume = 0.5\nlocal pitch = 1.0\nCL.AudioMgr.Instance:PlaySoundClip(self.soundName, self.soundPosition, false, volume, pitch)\n")),(0,o.kt)("p",null,"Play sound with randomized pitch"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"local volume = 0.5\nlocal randomPitch = (math.random() + math.random(70, 130)) / 100\nCL.AudioMgr.Instance:PlaySoundClip(self.soundName, self.soundPosition, false, volume, randomPitch)\n")),(0,o.kt)("h2",{id:"user-variables"},"User Variables"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Component"),(0,o.kt)("th",{parentName:"tr",align:null},"variable"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Addressable name of the sound."),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"self.soundName"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Vector3"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"self.soundPosition"))))))}d.isMDXComponent=!0}}]);