(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6150],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,c=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),f=u(n),m=o,y=f["".concat(l,".").concat(m)]||f[m]||s[m]||c;return n?r.createElement(y,a(a({ref:t},p),{},{components:n})):r.createElement(y,a({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=n.length,a=new Array(c);a[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var u=2;u<c;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2532:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return p},default:function(){return f}});var r=n(2122),o=n(9756),c=(n(7294),n(3905)),a=["components"],i={},l="CMD - Client to Server",u={unversionedId:"LuaScript/Reference by category/Network/CMD",id:"LuaScript/Reference by category/Network/CMD",isDocsHomePage:!1,title:"CMD - Client to Server",description:"The client calls the server function using Command(CMD). In general, there are very few cases where the client calls the server function.",source:"@site/docs/LuaScript/4.Reference by category/9.Network/2.CMD.md",sourceDirName:"LuaScript/4.Reference by category/9.Network",slug:"/LuaScript/Reference by category/Network/CMD",permalink:"/community-docs/docs/LuaScript/Reference by category/Network/CMD",editUrl:"https://github.com/BattleTalent/community-docs/docs/LuaScript/4.Reference by category/9.Network/2.CMD.md",version:"current",sidebarPosition:2,frontMatter:{},sidebar:"docs",previous:{title:"RPC - Server to Client",permalink:"/community-docs/docs/LuaScript/Reference by category/Network/RPC"},next:{title:"NetworkState - state synchronization",permalink:"/community-docs/docs/LuaScript/Reference by category/Network/NetworkState"}},p=[],s={toc:p};function f(e){var t=e.components,n=(0,o.Z)(e,a);return(0,c.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"cmd---client-to-server"},"CMD - Client to Server"),(0,c.kt)("p",null,"   The client calls the server function using Command(CMD). In general, there are very few cases where the client calls the server function."),(0,c.kt)("p",null,"   \u200b\t"),(0,c.kt)("p",null,"   Similarly, complete the function and register"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},'function WeaponFlyObj:NetworkInject()\n    self.host.interact.networkIB.networkIBState:InjectFunc("CmdToShoot", self.CmdToShoot)\n    --inject other function\nend\n\nfunction WeaponFlyObj:CmdToShoot()\n    --Server shoot\nend\n')),(0,c.kt)("p",null,"   The client uses the interface ",(0,c.kt)("inlineCode",{parentName:"p"},"CommandFunc")," (Please read ",(0,c.kt)("inlineCode",{parentName:"p"},"NetworkIBStateX")," for more interfaces) in networkIBState to call function (CmdToShoot) in the server."),(0,c.kt)("p",null,"   CommandFunc(funtionName)"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"functionName: Name of the function to call on the server",(0,c.kt)("pre",{parentName:"li"},(0,c.kt)("code",{parentName:"pre"},'function WeaponFlyObj:ClientToShoot()\n    self.host.interact.networkIB.networkIBState:CommandFunc("CmdToShoot", null, null, null, null)\nend\n')))))}f.isMDXComponent=!0}}]);