"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8969],{4178:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"LuaScript/Reference by category/Network/CMD","title":"CMD - Client to Server","description":"The client calls the server function using Command(CMD). In general, there are very few cases where the client calls the server function.","source":"@site/docs/LuaScript/4.Reference by category/9.Network/2.CMD.md","sourceDirName":"LuaScript/4.Reference by category/9.Network","slug":"/LuaScript/Reference by category/Network/CMD","permalink":"/community-docs/docs/LuaScript/Reference by category/Network/CMD","draft":false,"unlisted":false,"editUrl":"https://github.com/BattleTalent/community-docs/docs/LuaScript/4.Reference by category/9.Network/2.CMD.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"docs","previous":{"title":"RPC - Server to Client","permalink":"/community-docs/docs/LuaScript/Reference by category/Network/RPC"},"next":{"title":"NetworkState - state synchronization","permalink":"/community-docs/docs/LuaScript/Reference by category/Network/NetworkState"}}');var o=n(4848),c=n(8453);const i={},s="CMD - Client to Server",a={},l=[];function d(e){const t={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.RP)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"cmd---client-to-server",children:"CMD - Client to Server"})}),"\n",(0,o.jsx)(t.p,{children:"The client calls the server function using Command(CMD). In general, there are very few cases where the client calls the server function."}),"\n",(0,o.jsx)(t.p,{children:"\u200b"}),"\n",(0,o.jsx)(t.p,{children:"Similarly, complete the function and register"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'function WeaponFlyObj:NetworkInject()\r\n    self.host.interact.networkIB.networkIBState:InjectFunc("CmdToShoot", self.CmdToShoot)\r\n    --inject other function\r\nend\r\n\r\nfunction WeaponFlyObj:CmdToShoot()\r\n    --Server shoot\r\nend\n'})}),"\n",(0,o.jsxs)(t.p,{children:["The client uses the interface ",(0,o.jsx)(t.code,{children:"CommandFunc"})," (Please read ",(0,o.jsx)(t.code,{children:"NetworkIBStateX"})," for more interfaces) in networkIBState to call function (CmdToShoot) in the server."]}),"\n",(0,o.jsx)(t.p,{children:"CommandFunc(funtionName)"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"functionName: Name of the function to call on the server"}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'function WeaponFlyObj:ClientToShoot()\r\n    self.host.interact.networkIB.networkIBState:CommandFunc("CmdToShoot", null, null, null, null)\r\nend\n'})})]})}function u(e={}){const{wrapper:t}={...(0,c.RP)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{RP:()=>c,xA:()=>s});var r=n(6540);const o=r.createContext({});function c(e){const t=r.useContext(o);return r.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const i={};function s({components:e,children:t,disableParentContext:n}){let s;return s=n?"function"==typeof e?e({}):e||i:c(e),r.createElement(o.Provider,{value:s},t)}}}]);