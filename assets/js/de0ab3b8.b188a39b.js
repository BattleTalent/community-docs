"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6696],{8453:(e,n,t)=>{t.d(n,{RP:()=>o,xA:()=>s});var r=t(6540);const c=r.createContext({});function o(e){const n=r.useContext(c);return r.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const i={};function s({components:e,children:n,disableParentContext:t}){let s;return s=t?"function"==typeof e?e({}):e||i:o(e),r.createElement(c.Provider,{value:s},n)}},8518:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"LuaScript/Reference by category/Network/RPC","title":"RPC - Server to Client","description":"The server calls the client function using Remote Procedure Call (RPC).","source":"@site/docs/LuaScript/4.Reference by category/9.Network/1.RPC.md","sourceDirName":"LuaScript/4.Reference by category/9.Network","slug":"/LuaScript/Reference by category/Network/RPC","permalink":"/community-docs/docs/LuaScript/Reference by category/Network/RPC","draft":false,"unlisted":false,"editUrl":"https://github.com/BattleTalent/community-docs/docs/LuaScript/4.Reference by category/9.Network/1.RPC.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"docs","previous":{"title":"Event - OnSceneEnter","permalink":"/community-docs/docs/LuaScript/Reference by category/Scene/snippet-event-on-scene-enter"},"next":{"title":"CMD - Client to Server","permalink":"/community-docs/docs/LuaScript/Reference by category/Network/CMD"}}');var c=t(4848),o=t(8453);const i={},s="RPC - Server to Client",l={},a=[];function d(e){const n={code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.RP)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"rpc---server-to-client",children:"RPC - Server to Client"})}),"\n",(0,c.jsx)(n.p,{children:"The server calls the client function using Remote Procedure Call (RPC)."}),"\n",(0,c.jsx)(n.p,{children:"A function that needs to be called on the client:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"function WeaponFlyObj:RpcOnShoot(bullet)\r\n    --client to do\r\nend\n"})}),"\n",(0,c.jsx)(n.p,{children:"Registering Function in NetworkInject so that the client can find the same function and run it when the server calls it."}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:'function WeaponFlyObj:NetworkInject()\r\n    self.host.interact.networkIB.networkIBState:InjectFunc("RpcOnShoot", self.RpcOnShoot)\r\n    --inject other function\r\nend\n'})}),"\n",(0,c.jsxs)(n.p,{children:["The server uses the interface ",(0,c.jsx)(n.code,{children:"ServerRpcIntFunc"})," (Please read ",(0,c.jsx)(n.code,{children:"NetworkIBStateX"})," for more interfaces) in networkIBState to call functions in the client. (RpcOnShoot)."]}),"\n",(0,c.jsxs)(n.p,{children:["\u200b\tother interface refer to ",(0,c.jsx)(n.code,{children:"NetworkIBStateX"})]}),"\n",(0,c.jsx)(n.p,{children:"ServerRpcIntFunc(funtionName, int, includeServer)"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"functionName: The name of the function to be called on the client"}),"\n",(0,c.jsx)(n.li,{children:"int:  int value"}),"\n",(0,c.jsx)(n.li,{children:"includeServer: run this function on the server as well\uff0cIn this case, includeServer is false, so it will only run RpcOnShoot on the client side."}),"\n"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:'function WeaponFlyObj:ServerOnShoot(bullet)\r\n    self.host.interact.networkIB.networkIBState:ServerRpcIntFunc("RpcOnShoot", bullet.netId, false)\r\nend\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.RP)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}}}]);